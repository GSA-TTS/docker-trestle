#! /usr/bin/env bash

usage="
$0: Generate control statement markdown for an SSP

Usage:
    $0 -h
    $0 [-p PROFILE_NAME] [-c COMPONENT_NAMES_SOURCE] [-s LEVERAGED_SSP] [-m MARKDOWN_DIR] [-f]

Options:
-h: show help and exit
-p: Profile name to base the SSP on. Defaults to 'profile' value in trestle-config.yaml
-c: Comma-separated list of ComponentDefinitions to include. Defaults to 'components:' list in config
-s: SSP to leverage as local name or URL. Defaults to 'leveraged-ssp' value in trestle-config.yaml
-m: Directory to put markdown files in. Defaults to 'markdown' value in config, or 'control-statements'
-f: Force overwrite

Notes:
* Will load defaults from trestle-config.yaml file, if present
"

set -e

declare -a optional_args
source /app/bin/functions.sh
markdown=$(yaml_parse_value 'trestle-config.yaml' 'markdown' 'control-statements')
profile=$(yaml_parse_value 'trestle-config.yaml' 'profile')
leveraged_ssp=$(yaml_parse_value 'trestle-config.yaml' 'leveraged-ssp')
components=$(yaml_comma_sep_components 'trestle-config.yaml')

while getopts "hp:c:s:m:f" opt; do
    case "$opt" in
        p)
            profile=${OPTARG}
            ;;
        c)
            components=${OPTARG}
            ;;
        s)
            leveraged_ssp=${OPTARG}
            ;;
        m)
            markdown=${OPTARG}
            ;;
        f)
            optional_args+=("-fo")
            ;;
        h)
            echo "$usage"
            exit 0
            ;;
    esac
done

if [ "$profile" = "" ]; then
    echo "$usage"
    exit 1
fi

if [ ! -d "profiles/$profile" ]; then
    copy-profile "$profile"
fi

if [ "$components" != "" ]; then
    optional_args+=("-cd" $components)
fi

if [ "$leveraged_ssp" != "" ]; then
    optional_args+=("-ls" $leveraged_ssp)
fi

trestle author ssp-generate -p "$profile" -o "$markdown" "${optional_args[@]}"
